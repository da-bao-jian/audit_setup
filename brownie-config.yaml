project_structure:
    build: build
    contracts: contracts
    interfaces: interfaces
    reports: reports
    scripts: scripts
    tests: tests

dependencies:
  - OpenZeppelin/openzeppelin-contracts@3.4.0

# exclude SafeMath when calculating test coverage
# https://eth-brownie.readthedocs.io/en/v1.10.3/config.html#exclude_paths
reports:
  exclude_contracts:
    - SafeMath
    
compiler:
  solc:
    # when version is set to null, it is set based on the contract pragma
    version: null
    remappings: 
      - "@openzeppelin=OpenZeppelin/openzeppelin-contracts@3.4.0"

# uncomment dotenv if you added the .env file
# dotenv: .env

# to see the available networks in detail for configureation, run 'brownie networks list true'
networks:
  # to overide the network, run brownie cli with --network flag i.e. --network mainnet-fork  
  # for forking the mainnet, otherwise runs ganache locally
  default: development
  networks: 
    development:
              host: http://127.0.0.1
              gas_price: 0
              persist: false
              reverting_tx_gas_limit: 12000000
              test_rpc:
                cmd: ganache-cli
                port: 8545
                gas_limit: 12000000 
                accounts: 10
                evm_version: istanbul
                mnemonic: brownie
    # set your Infura API token to the environment variable WEB3_INFURA_PROJECT_ID
    mainnet:
        host: https://mainnet.infura.io/v3/$WEB3_INFURA_PROJECT_ID
    kovan:
        host: https://kovan.infura.io/v3/$WEB3_INFURA_PROJECT_ID
    rinkeby:
        host: https://rinkeby.infura.io/v3/$WEB3_INFURA_PROJECT_ID
    ropsten:
        host: https://ropsten.infura.io/v3/$WEB3_INFURA_PROJECT_ID

console:
    show_colors: true
    color_style: monokai
    auto_suggest: true
    completions: true
    editing_mode: vi # could switch to emacs
      
# automatically fetch contract sources from Etherscan
autofetch_sources: True

# Change to trye to verify smart contracts
verify: False